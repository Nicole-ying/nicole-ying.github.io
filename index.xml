<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nicole</title>
    <link>https://nicole-ying.github.io/</link>
    <description>Recent content on Nicole</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 12 Jun 2024 15:06:54 +0800</lastBuildDate>
    <atom:link href="https://nicole-ying.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java</title>
      <link>https://nicole-ying.github.io/post/java/</link>
      <pubDate>Wed, 12 Jun 2024 15:06:54 +0800</pubDate>
      <guid>https://nicole-ying.github.io/post/java/</guid>
      <description></description>
    </item>
    <item>
      <title>生成对抗网络笔记</title>
      <link>https://nicole-ying.github.io/post/note_of_gan/</link>
      <pubDate>Mon, 08 Jan 2024 14:16:21 +0800</pubDate>
      <guid>https://nicole-ying.github.io/post/note_of_gan/</guid>
      <description>%matplotlib inline&#xA;%matplotlib inline: 用于在IPython环境（例如Jupyter Notebook）中内嵌绘制图表。它的作用是使得你创建的所有Matplotlib图表都会直接嵌入到Notebook中，而不是在新窗口中打开。&#xA;plt.rcParams[&amp;lsquo;figure.figsize&amp;rsquo;] = (10.0, 8.0) # set default size of plots&#xA;plt.rcParams[&amp;lsquo;image.cmap&amp;rsquo;] = &amp;lsquo;gray&amp;rsquo;&#xA;plt.rcParams[&amp;lsquo;image.interpolation&amp;rsquo;] = &amp;rsquo;nearest&amp;rsquo;&#xA;plt.rcParams 它是一个配置字典，允许全局自定义绘图的外观和行为。&#xA;plt.rcParams[&amp;lsquo;figure.figsize&amp;rsquo;] = (10.0, 8.0)：设置了默认的图表大小。&#xA;plt.rcParams[&amp;lsquo;image.cmap&amp;rsquo;] = &amp;lsquo;gray&amp;rsquo;：设置了默认的颜色映射。颜色映射是一种将数值数据映射到颜色的方法。&#xA;plt.rcParams[&amp;lsquo;image.interpolation&amp;rsquo;] = &amp;rsquo;nearest&amp;rsquo;：设置了图像的插值方法。插值是在放大或缩小图像时使用的一种处理方法，用于估计新像素的值。&#xA;images = np.reshape(images, [images.shape[0], -1])&#xA;将一个多维数组 images 重塑为一个二维数组，其中第一个维度为图片数量，第二个-1是自动计算维度使数组保持大小不变&#xA;images.shape[0]&#xA;images 通常是一个三维或四维数组。例如，一个常见的四维数组形状是 (batch_size, height, width, channels)，在这种情况下，images.shape[0] 就是 batch_size，即批次中的图像数量。&#xA;sqrtn = int(np.ceil(np.sqrt(images.shape[0])))&#xA;np.ceil：将输入的每个元素向上取整到最接近的整数。&#xA;np.sqrt：用于计算数组中每个元素的平方根。&#xA;fig = plt.figure(figsize=(sqrtn, sqrtn))&#xA;plt.figure: 用于创建新的图形对象，以便在其上绘制图表。通过 figsize 参数来指定图形的宽度和高度，以英寸为单位。&#xA;gs = gridspec.GridSpec(sqrtn, sqrtn)&#xA;gridspec.GridSpec(): 创建一个网格布局，该网格布局将被用于在图中安排子图。可以放sqrtn X sqrnt个子图。</description>
    </item>
    <item>
      <title>使用Hugo创建博客</title>
      <link>https://nicole-ying.github.io/post/create_a_blog/</link>
      <pubDate>Sat, 06 Jan 2024 16:47:48 +0800</pubDate>
      <guid>https://nicole-ying.github.io/post/create_a_blog/</guid>
      <description>1. 前提 电脑里有git环境&#xA;2. windows安装Hugo Hugo有标准版和扩展版两个版本，推荐下载扩展版，区别在于扩展版提供了将Sass转译为CSS的 LibSass 转译器&#xA;Scoop安装Hugo扩展版 PowerShell先下载scoop，再执行以下命令安装hugo扩展版&#xA;scoop install hugo-extended&#xA;hugo被下载到./scoop/apps里&#xA;下载好hugo后还需要配置环境变量Path，bin目录里面存放hugo.exe文件&#xA;此电脑&amp;raquo;属性&amp;raquo;高级系统设置&amp;raquo;环境变量&amp;raquo;系统变量&amp;raquo;Path&amp;raquo;新建，加入D:\hugo\bin&#xA;3. 创建本地站点 hugo new site myblog&#xA;从官网下载主题，以本博客主题为例(myblog目录下执行)&#xA;git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c&#xA;4. 本地启动个人博客 4.1. 动态选择主题 hugo server -t m10c &amp;ndash;buildDrafts&#xA;4.2. 主题放入配置文件config.toml themes/m10c/exampleSite里的config.toml替换根目录下的config.toml，注意修改里面的themesDir路径，配置好后直接执行&#xA;hugo server&#xA;5. 写一篇本地博客 content/post里新建一个md文件&#xA;或者在根目录下使用命令&#xA;hugo new post/test.md&#xA;注意，博客文件必须放在content/post路径下&#xA;6. 个人博客部署到远端服务器 创建一个github仓库，命名为用户名.io&#xA;终端输入&#xA;hugo &amp;ndash;theme=m10c &amp;ndash;baseURL=&amp;ldquo;https://用户名.github.io/&amp;rdquo; &amp;ndash;buildDrafts&#xA;会生成一个public文件&#xA;进入public目录，执行&#xA;git init git add . git commit -m &amp;#34;your comment&amp;#34; git remote add origin sshURL git push 7.</description>
    </item>
  </channel>
</rss>
